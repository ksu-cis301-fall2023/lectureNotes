import org.sireum.logika._

var num: Z = readInt("Enter a number: ")
val numOrig : Z = num

//FIRST: write the code that updates num to be the
//absolute value of the input

if (num < 0) {
    num = num * -1

    l"""{
        1. num_old < 0              premise //condition is true
        2. num == num_old*-1        premise //from assignment
        3. numOrig == num_old       premise //from previous assignment
        4. num == numOrig*-1        subst2 3 2
        5. num >= 0                 algebra 1 2
        6. num == -numOrig          algebra 4
        7. num == numOrig V num == -numOrig Vi2 6
    }"""
} else {
    //no code, just needed for verification

    l"""{
        1. !(num < 0)               premise // condition is false
        2. num >= 0                 algebra 1 //needed for assert
        3. numOrig == num           premise //from previous assignment
        4. num == numOrig           algebra 3
        5. num == numOrig V num == -numOrig Vi1 4
    }"""
}

l"""{
    1. num >= 0                     premise //true in both branches
    2. num == numOrig V num == -numOrig   premise
}"""

assert(num >= 0)
assert(num == numOrig | num == -numOrig)

//be sure to include an "else" branch (even if empty) for the verification

//How can we assert that num is the absolute value of the input?