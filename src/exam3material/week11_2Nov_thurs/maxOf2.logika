import org.sireum.logika._

val a: Z = readInt("Enter first number: ")
val b: Z = readInt("Enter second number: ")

var max: Z = 0

if (a > b) {
    max = a

    l"""{
        1. max == a         premise //from assignment
        2. a > b            premise //condition is true
        3. max >= a         algebra 1 //needed for assert
        4. max >= b         algebra 1 2
    }"""

    //need max>=a
    //need max >= b

} else {
    max = b

    l"""{
        1. max == b         premise //from assignment
        2. !(a > b)         premise //condition is not true
        3. a <= b           algebra 2
        4. max >= b         algebra 1 //needed for assert
        5. max >= a         algebra 1 3 //needed for assert
    }"""

    //need max>=a
    //need max>=b
}

l"""{
    1. max >= a             premise //true in both branches
    2. max >= b             premise //true in both branches
    3. max == a V max == b  premise //LHS true in if, RHS true in else
    4. {
        5. max == a             assume
        6. max == b V max == a  Vi2 5
    }
    7. {
        8. max == b             assume
        9. max == b V max == a  Vi1 8
    }
    10. max == b V max == a     Ve 3 4 7
}"""

//write assert that we have found the max
assert(max == b | max == a) //it is one of the numbers
assert(max >= a)
assert(max >= b)

//do the verification