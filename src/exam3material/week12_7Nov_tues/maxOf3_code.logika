//just the code for finding the biggest of three numbers

import org.sireum.logika._

val a: Z = readInt()    //suppose a is 3
val b: Z = readInt()    //suppose b is 5
val c: Z = readInt()    //suppose c is 10
var max: Z = 0

/*
1) finish the code
2) add asserts at the bottom
3) mark where logic blocks would go
4) finish the verification in the next file
*/

if (a >= b) {
    //what do we know here? how to find the max?
    //max isn't b
    if (a >= c) {
        max = a

        //logic block
        //want: max >= a
        //want: max >= b
        //want: max >= c
        //want: max == a
    } else {
        max = c

        //logic block
        //want: max >= a
        //want: max >= b
        //want: max >= c
        //want: max == c
    }

    //max == a V max == c
} else {
    //what do we know here? how to find the max?
    //a is not the max
    if (b >= c) {
        max = b

        //logic block
        //want: max >= a
        //want: max >= b
        //want: max >= c
    } else {
        max = c

        //logic block
        //want: max >= a
        //want: max >= b
        //want: max >= c
    }

}

//overall summary here

//Reminder: how do we run Logika programs?
print("Max between ", a, ", ", b, " and ", c, " is ", max)

//How do we know we have the max?
//what assert(s) do we want?
assert(max >= a)
assert(max >= b)
assert(max >= c)
assert(max == a | max == b | max == c)